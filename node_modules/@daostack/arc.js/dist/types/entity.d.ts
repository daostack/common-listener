import { Observable } from 'rxjs';
import { Address, Arc, IApolloQueryOptions } from './index';
export interface IEntityState {
    id: string;
}
export interface IEntityRef<TEntity> {
    id: Address;
    entity: TEntity;
}
export declare abstract class Entity<TEntityState extends IEntityState> {
    id: string;
    context: Arc;
    coreState: TEntityState | undefined;
    constructor(context: Arc, idOrOpts: string | TEntityState);
    abstract state(apolloQueryOptions: IApolloQueryOptions): Observable<TEntityState>;
    fetchState(apolloQueryOptions?: IApolloQueryOptions, refetch?: boolean): Promise<TEntityState>;
    protected setState(entityState: TEntityState): void;
}

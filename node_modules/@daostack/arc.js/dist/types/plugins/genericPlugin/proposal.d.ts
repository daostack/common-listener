import { Observable } from 'rxjs';
import { Address, Arc, IApolloQueryOptions, IProposalState, Operation, Proposal } from '../../index';
export interface IGenericPluginProposalState extends IProposalState {
    id: string;
    contractToCall: Address;
    callData: string;
    executed: boolean;
    returnValue: string;
}
export declare class GenericPluginProposal extends Proposal<IGenericPluginProposalState> {
    static fragment: {
        name: string;
        fragment: import("graphql").DocumentNode;
    };
    static itemMap(context: Arc, item: any, queriedId?: string): IGenericPluginProposalState | null;
    state(apolloQueryOptions: IApolloQueryOptions): Observable<IGenericPluginProposalState>;
    redeemerContract(): import("ethers").Contract;
    redeemRewards(beneficiary?: Address): Operation<boolean>;
}

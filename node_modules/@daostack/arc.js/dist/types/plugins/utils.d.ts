import { CompetitionPlugin, CompetitionProposal, ContributionRewardExtPlugin, ContributionRewardExtProposal, ContributionRewardPlugin, ContributionRewardProposal, FundingRequest, FundingRequestProposal, GenericPlugin, GenericPluginProposal, IPluginState, IProposalBaseCreateOptions, IProposalCreateOptionsComp, IProposalCreateOptionsCR, IProposalCreateOptionsCRExt, IProposalCreateOptionsFundingRequest, IProposalCreateOptionsGS, IProposalCreateOptionsJoinAndQuit, IProposalCreateOptionsSR, IProposalState, JoinAndQuit, JoinAndQuitProposal, Plugin, Proposal, ProposalPlugin, ReputationFromTokenPlugin, SchemeRegistrarPlugin, SchemeRegistrarProposal, UnknownPlugin } from '../index';
export declare const ProposalPlugins: {
    FundingRequest: typeof FundingRequest;
    JoinAndQuit: typeof JoinAndQuit;
    GenericScheme: typeof GenericPlugin;
    SchemeRegistrar: typeof SchemeRegistrarPlugin;
    ContributionReward: typeof ContributionRewardPlugin;
    ContributionRewardExt: typeof ContributionRewardExtPlugin;
    Competition: typeof CompetitionPlugin;
};
export declare const Plugins: {
    ReputationFromToken: typeof ReputationFromTokenPlugin;
    unknown: typeof UnknownPlugin;
    FundingRequest: typeof FundingRequest;
    JoinAndQuit: typeof JoinAndQuit;
    GenericScheme: typeof GenericPlugin;
    SchemeRegistrar: typeof SchemeRegistrarPlugin;
    ContributionReward: typeof ContributionRewardPlugin;
    ContributionRewardExt: typeof ContributionRewardExtPlugin;
    Competition: typeof CompetitionPlugin;
};
export declare type PluginName = keyof typeof Plugins;
export declare const Proposals: {
    GenericScheme: typeof GenericPluginProposal;
    ContributionReward: typeof ContributionRewardProposal;
    Competition: typeof CompetitionProposal;
    ContributionRewardExt: typeof ContributionRewardExtProposal;
    FundingRequest: typeof FundingRequestProposal;
    JoinAndQuit: typeof JoinAndQuitProposal;
    SchemeRegistrar: typeof SchemeRegistrarProposal;
    SchemeRegistrarAdd: typeof SchemeRegistrarProposal;
    SchemeRegistrarEdit: typeof SchemeRegistrarProposal;
    SchemeRegistrarRemove: typeof SchemeRegistrarProposal;
};
export declare type ProposalName = keyof typeof Proposals;
export declare type ProposalCreateOptions = IProposalCreateOptionsCRExt | IProposalCreateOptionsGS | IProposalCreateOptionsSR | IProposalCreateOptionsComp | IProposalCreateOptionsCR | IProposalCreateOptionsFundingRequest | IProposalCreateOptionsJoinAndQuit;
export declare type AnyProposal = Proposal<IProposalState>;
export declare type AnyPlugin = Plugin<IPluginState>;
export declare type AnyProposalPlugin = ProposalPlugin<IPluginState, IProposalState, IProposalBaseCreateOptions>;

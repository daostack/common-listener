import { Observable } from 'rxjs';
import { Arc, IApolloQueryOptions, IPluginQueryOptions, IPluginState, IProposalBaseCreateOptions, IProposalQueryOptions, IProposalState, ITransaction, Operation, Plugin, Proposal, transactionErrorHandler, transactionResultHandler } from '../index';
export declare abstract class ProposalPlugin<TPluginState extends IPluginState, TProposalState extends IProposalState, TProposalCreateOptions extends IProposalBaseCreateOptions> extends Plugin<TPluginState> {
    static search<TPluginState extends IPluginState, TProposalState extends IProposalState, TProposalCreateOptions extends IProposalBaseCreateOptions>(context: Arc, options?: IPluginQueryOptions, apolloQueryOptions?: IApolloQueryOptions): Observable<Array<ProposalPlugin<TPluginState, TProposalState, TProposalCreateOptions>>>;
    createProposal(options: TProposalCreateOptions): Operation<Proposal<TProposalState>>;
    proposals(options?: IProposalQueryOptions, apolloQueryOptions?: IApolloQueryOptions): Observable<Array<Proposal<TProposalState>>>;
    protected createProposalErrorHandler(options: TProposalCreateOptions): transactionErrorHandler;
    protected abstract createProposalTransaction(options: TProposalCreateOptions): Promise<ITransaction>;
    protected abstract createProposalTransactionMap(options?: TProposalCreateOptions): transactionResultHandler<Proposal<TProposalState>>;
}

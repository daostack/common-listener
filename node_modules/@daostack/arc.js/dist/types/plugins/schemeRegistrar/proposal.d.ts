import { DocumentNode } from 'graphql';
import { Observable } from 'rxjs';
import { Address, Arc, IApolloQueryOptions, IProposalState, Proposal } from '../../index';
export interface ISchemeRegistrarProposalState extends IProposalState {
    id: string;
    pluginToRegister: Address;
    pluginToRegisterPermission: string;
    pluginToRemove: string;
    decision: number;
    pluginRegistered: boolean;
    pluginRemoved: boolean;
}
export declare class SchemeRegistrarProposal extends Proposal<ISchemeRegistrarProposalState> {
    static fragment: {
        name: string;
        fragment: DocumentNode;
    };
    protected static fragmentField: {
        name: string;
        fragment: DocumentNode;
    } | undefined;
    protected static itemMap(context: Arc, item: any, queriedId?: string): ISchemeRegistrarProposalState | null;
    state(apolloQueryOptions: IApolloQueryOptions): Observable<ISchemeRegistrarProposalState>;
}

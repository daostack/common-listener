import BN from 'bn.js';
import { Observable } from 'rxjs';
import { Address, Arc, IApolloQueryOptions, IProposalState, Operation, Proposal } from '../../index';
export interface IContributionRewardExtProposalState extends IProposalState {
    beneficiary: Address;
    externalTokenReward: BN;
    externalToken: Address;
    ethReward: BN;
    nativeTokenReward: BN;
    periods: number;
    periodLength: number;
    reputationReward: BN;
    alreadyRedeemedNativeTokenPeriods: number;
    alreadyRedeemedReputationPeriods: number;
    alreadyRedeemedExternalTokenPeriods: number;
    alreadyRedeemedEthPeriods: number;
    reputationChangeLeft: BN | null;
    nativeTokenRewardLeft: BN | null;
    ethRewardLeft: BN | null;
    externalTokenRewardLeft: BN | null;
}
export declare class ContributionRewardExtProposal extends Proposal<IContributionRewardExtProposalState> {
    static itemMap(context: Arc, item: any, queriedId?: string): IContributionRewardExtProposalState | null;
    state(apolloQueryOptions: IApolloQueryOptions): Observable<IContributionRewardExtProposalState>;
    redeemerContract(): import("ethers").Contract;
    redeemRewards(beneficiary?: Address): Operation<boolean>;
}

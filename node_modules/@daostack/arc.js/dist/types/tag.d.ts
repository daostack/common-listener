import { DocumentNode } from 'graphql';
import { Observable } from 'rxjs';
import { AnyProposal, Arc, Entity, IApolloQueryOptions, ICommonQueryOptions, IEntityRef } from './index';
export interface ITagState {
    id: string;
    numberOfProposals: number;
    proposals?: Array<IEntityRef<AnyProposal>>;
}
export interface ITagQueryOptions extends ICommonQueryOptions {
    where?: {
        id?: string;
        proposal?: string;
    };
}
export declare class Tag extends Entity<ITagState> {
    static fragments: {
        TagFields: DocumentNode;
    };
    static search(context: Arc, options?: ITagQueryOptions, apolloQueryOptions?: IApolloQueryOptions): Observable<Tag[]>;
    static itemMap: (context: Arc, item: any, queriedId?: string | undefined) => ITagState;
    state(apolloQueryOptions?: IApolloQueryOptions): Observable<ITagState>;
}

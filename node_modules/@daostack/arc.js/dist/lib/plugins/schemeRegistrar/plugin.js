"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_tag_1 = __importDefault(require("graphql-tag"));
var index_1 = require("../../index");
var SchemeRegistrarPlugin = /** @class */ (function (_super) {
    __extends(SchemeRegistrarPlugin, _super);
    function SchemeRegistrarPlugin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SchemeRegistrarPlugin.itemMap = function (arc, item, queriedId) {
        if (!item) {
            index_1.Logger.debug("SchemeRegistrarPlugin ItemMap failed. " + (queriedId && "Could not find SchemeRegistrarPlugin with id '" + queriedId + "'"));
            return null;
        }
        var name = item.name;
        if (!name) {
            try {
                name = arc.getContractInfo(item.address).name;
            }
            catch (err) {
                if (err.message.match(/no contract/gi)) {
                    // continue
                }
                else {
                    throw err;
                }
            }
        }
        var schemeRegistrarParams = item.schemeRegistrarParams && {
            voteRegisterParams: index_1.mapGenesisProtocolParams(item.schemeRegistrarParams.voteRegisterParams),
            voteRemoveParams: index_1.mapGenesisProtocolParams(item.schemeRegistrarParams.voteRemoveParams),
            votingMachine: item.schemeRegistrarParams.votingMachine
        };
        return {
            address: item.address,
            canDelegateCall: item.canDelegateCall,
            canManageGlobalConstraints: item.canManageGlobalConstraints,
            canRegisterPlugins: item.canRegisterSchemes,
            canUpgradeController: item.canUpgradeController,
            dao: item.dao.id,
            id: item.id,
            name: name,
            numberOfBoostedProposals: Number(item.numberOfBoostedProposals),
            numberOfPreBoostedProposals: Number(item.numberOfPreBoostedProposals),
            numberOfQueuedProposals: Number(item.numberOfQueuedProposals),
            pluginParams: schemeRegistrarParams,
            version: item.version
        };
    };
    SchemeRegistrarPlugin.prototype.createProposalTransaction = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var msg, pluginId, _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        pluginId = options.plugin ? options.plugin : this.id;
                        _a = options.proposalType;
                        switch (_a) {
                            case 'SchemeRegistrarAdd': return [3 /*break*/, 1];
                            case 'SchemeRegistrarEdit': return [3 /*break*/, 1];
                            case 'SchemeRegistrarRemove': return [3 /*break*/, 3];
                        }
                        return [3 /*break*/, 5];
                    case 1:
                        if (options.parametersHash === undefined) {
                            msg = "Missing argument \"parametersHash\" for SchemeRegistrar in Proposal.create()";
                            throw Error(msg);
                        }
                        if (options.permissions === undefined) {
                            msg = "Missing argument \"permissions\" for SchemeRegistrar in Proposal.create()";
                            throw Error(msg);
                        }
                        _b = options;
                        return [4 /*yield*/, this.context.saveIPFSData(options)];
                    case 2:
                        _b.descriptionHash = _d.sent();
                        return [2 /*return*/, {
                                contract: this.context.getContract(pluginId),
                                method: 'proposeScheme',
                                args: [options.pluginToRegister, options.permissions, options.descriptionHash]
                            }];
                    case 3:
                        _c = options;
                        return [4 /*yield*/, this.context.saveIPFSData(options)];
                    case 4:
                        _c.descriptionHash = _d.sent();
                        return [2 /*return*/, {
                                contract: this.context.getContract(pluginId),
                                method: 'proposeToRemoveScheme',
                                args: [options.pluginToRegister, options.descriptionHash]
                            }];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    SchemeRegistrarPlugin.prototype.createProposalTransactionMap = function (options) {
        var _this = this;
        return function (receipt) {
            var eventName;
            switch (options.proposalType) {
                case 'SchemeRegistrarAdd':
                case 'SchemeRegistrarEdit':
                    eventName = 'NewSchemeProposal';
                    break;
                case 'SchemeRegistrarRemove':
                    eventName = 'RemoveSchemeProposal';
                    break;
                default:
                    throw Error("SchemeRegistrar.createProposal: Unknown proposal type " + options.proposalType);
            }
            var args = index_1.getEventArgs(receipt, eventName, 'SchemeRegistrar.createProposal');
            var proposalId = args[1];
            return new index_1.SchemeRegistrarProposal(_this.context, proposalId);
        };
    };
    SchemeRegistrarPlugin.fragment = {
        name: 'SchemeRegistrarParams',
        fragment: graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      fragment SchemeRegistrarParams on ControllerScheme {\n        schemeRegistrarParams {\n          votingMachine\n          voteRemoveParams {\n            queuedVoteRequiredPercentage\n            queuedVotePeriodLimit\n            boostedVotePeriodLimit\n            preBoostedVotePeriodLimit\n            thresholdConst\n            limitExponentValue\n            quietEndingPeriod\n            proposingRepReward\n            votersReputationLossRatio\n            minimumDaoBounty\n            daoBountyConst\n            activationTime\n            voteOnBehalf\n          }\n          voteRegisterParams {\n            queuedVoteRequiredPercentage\n            queuedVotePeriodLimit\n            boostedVotePeriodLimit\n            preBoostedVotePeriodLimit\n            thresholdConst\n            limitExponentValue\n            quietEndingPeriod\n            proposingRepReward\n            votersReputationLossRatio\n            minimumDaoBounty\n            daoBountyConst\n            activationTime\n            voteOnBehalf\n          }\n        }\n      }\n    "], ["\n      fragment SchemeRegistrarParams on ControllerScheme {\n        schemeRegistrarParams {\n          votingMachine\n          voteRemoveParams {\n            queuedVoteRequiredPercentage\n            queuedVotePeriodLimit\n            boostedVotePeriodLimit\n            preBoostedVotePeriodLimit\n            thresholdConst\n            limitExponentValue\n            quietEndingPeriod\n            proposingRepReward\n            votersReputationLossRatio\n            minimumDaoBounty\n            daoBountyConst\n            activationTime\n            voteOnBehalf\n          }\n          voteRegisterParams {\n            queuedVoteRequiredPercentage\n            queuedVotePeriodLimit\n            boostedVotePeriodLimit\n            preBoostedVotePeriodLimit\n            thresholdConst\n            limitExponentValue\n            quietEndingPeriod\n            proposingRepReward\n            votersReputationLossRatio\n            minimumDaoBounty\n            daoBountyConst\n            activationTime\n            voteOnBehalf\n          }\n        }\n      }\n    "])))
    };
    return SchemeRegistrarPlugin;
}(index_1.ProposalPlugin));
exports.SchemeRegistrarPlugin = SchemeRegistrarPlugin;
var templateObject_1;
//# sourceMappingURL=plugin.js.map
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_tag_1 = __importDefault(require("graphql-tag"));
var rxjs_1 = require("rxjs");
var operators_1 = require("rxjs/operators");
var index_1 = require("../../index");
var GenericPluginProposal = /** @class */ (function (_super) {
    __extends(GenericPluginProposal, _super);
    function GenericPluginProposal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPluginProposal.itemMap = function (context, item, queriedId) {
        if (!item) {
            index_1.Logger.debug("GenericPluginProposal ItemMap failed. " + (queriedId && "Could not find GenericPluginProposal with id '" + queriedId + "'"));
            return null;
        }
        var genericSchemeState = index_1.GenericPlugin.itemMap(context, item.scheme, queriedId);
        if (!genericSchemeState) {
            return null;
        }
        var genericScheme = new index_1.GenericPlugin(context, genericSchemeState);
        var genericSchemeProposal = new GenericPluginProposal(context, item.id);
        var baseState = index_1.Proposal.itemMapToBaseState(context, item, genericScheme, genericSchemeProposal, 'GenericScheme');
        if (!baseState) {
            return null;
        }
        return __assign(__assign({}, baseState), { callData: item.genericScheme.callData, contractToCall: item.genericScheme.contractToCall, executed: item.genericScheme.executed, returnValue: item.genericScheme.returnValue });
    };
    GenericPluginProposal.prototype.state = function (apolloQueryOptions) {
        var query = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["query ProposalState\n      {\n        proposal(id: \"", "\") {\n          ...ProposalFields\n          votes {\n            id\n          }\n          stakes {\n            id\n          }\n        }\n      }\n      ", "\n      ", "\n    "], ["query ProposalState\n      {\n        proposal(id: \"", "\") {\n          ...ProposalFields\n          votes {\n            id\n          }\n          stakes {\n            id\n          }\n        }\n      }\n      ", "\n      ", "\n    "])), this.id, index_1.Proposal.baseFragment, index_1.Plugin.baseFragment);
        var result = this.context.getObservableObject(this.context, query, GenericPluginProposal.itemMap, this.id, apolloQueryOptions);
        return result;
    };
    GenericPluginProposal.prototype.redeemerContract = function () {
        for (var _i = 0, REDEEMER_CONTRACT_VERSIONS_1 = index_1.REDEEMER_CONTRACT_VERSIONS; _i < REDEEMER_CONTRACT_VERSIONS_1.length; _i++) {
            var version = REDEEMER_CONTRACT_VERSIONS_1[_i];
            try {
                var contractInfo = this.context.getContractInfoByName('Redeemer', version);
                return this.context.getContract(contractInfo.address);
            }
            catch (err) {
                if (!err.message.match(/no contract/i)) {
                    // if the contract cannot be found, try the next one
                    throw err;
                }
            }
        }
        throw Error("No Redeemer contract could be found (search for versions " + index_1.REDEEMER_CONTRACT_VERSIONS + ")");
    };
    GenericPluginProposal.prototype.redeemRewards = function (beneficiary) {
        var _this = this;
        var mapReceipt = function (receipt) { return true; };
        var createTransaction = function () { return __awaiter(_this, void 0, void 0, function () {
            var state, pluginAddress, method, args;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!beneficiary) {
                            beneficiary = index_1.NULL_ADDRESS;
                        }
                        return [4 /*yield*/, this.fetchState()];
                    case 1:
                        state = _a.sent();
                        pluginAddress = this.context.getContractInfoByName('ContributionReward', index_1.CONTRIBUTION_REWARD_DUMMY_VERSION).address;
                        method = 'redeem';
                        args = [pluginAddress, state.votingMachine, this.id, beneficiary];
                        return [2 /*return*/, {
                                contract: this.redeemerContract(),
                                method: method,
                                args: args
                            }];
                }
            });
        }); };
        var observable = rxjs_1.from(createTransaction()).pipe(operators_1.concatMap(function (transaction) {
            return _this.context.sendTransaction(transaction, mapReceipt);
        }));
        return index_1.toIOperationObservable(observable);
    };
    GenericPluginProposal.fragment = {
        name: 'GenericPluginProposalFields',
        fragment: graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      fragment GenericPluginProposalFields on Proposal {\n        genericScheme {\n          id\n          contractToCall\n          callData\n          executed\n          returnValue\n        }\n      }\n    "], ["\n      fragment GenericPluginProposalFields on Proposal {\n        genericScheme {\n          id\n          contractToCall\n          callData\n          executed\n          returnValue\n        }\n      }\n    "])))
    };
    return GenericPluginProposal;
}(index_1.Proposal));
exports.GenericPluginProposal = GenericPluginProposal;
var templateObject_1, templateObject_2;
//# sourceMappingURL=proposal.js.map
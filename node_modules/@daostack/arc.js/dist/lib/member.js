"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var bn_js_1 = __importDefault(require("bn.js"));
var ethers_1 = require("ethers");
var graphql_tag_1 = __importDefault(require("graphql-tag"));
var rxjs_1 = require("rxjs");
var operators_1 = require("rxjs/operators");
var index_1 = require("./index");
/**
 * Represents an account that holds reputaion in a specific DAO
 */
var Member = /** @class */ (function (_super) {
    __extends(Member, _super);
    function Member() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Member.search = function (context, options, apolloQueryOptions) {
        if (options === void 0) { options = {}; }
        if (apolloQueryOptions === void 0) { apolloQueryOptions = {}; }
        var _a;
        if (!options.where) {
            options.where = {};
        }
        var itemMap = function (arc, item, queriedId) {
            var state = Member.itemMap(arc, item, queriedId);
            return new Member(arc, state);
        };
        if (options.where.id) {
            return new Member(context, options.where.id).state().pipe(operators_1.map(function (r) { return [r]; }));
        }
        else {
            var where = '';
            for (var _i = 0, _b = Object.keys(options.where); _i < _b.length; _i++) {
                var key = _b[_i];
                if (options.where[key] === undefined) {
                    continue;
                }
                if (key === 'address' || key === 'dao') {
                    var option = options.where[key];
                    index_1.isAddress(option);
                    options.where[key] = option.toLowerCase();
                }
                where += key + ": \"" + options.where[key] + "\"\n";
            }
            where += ' dao_not: null\n';
            var query = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n        query ReputationHolderSearch {\n          reputationHolders ", " {\n            ...ReputationHolderFields\n          }\n        }\n        ", "\n      "], ["\n        query ReputationHolderSearch {\n          reputationHolders ", " {\n            ...ReputationHolderFields\n          }\n        }\n        ", "\n      "])), index_1.createGraphQlQuery(options, where), Member.fragments.ReputationHolderFields);
            return context.getObservableList(context, query, itemMap, (_a = options.where) === null || _a === void 0 ? void 0 : _a.id, apolloQueryOptions);
        }
    };
    Member.itemMap = function (context, item, queriedId) {
        if (!item || item.id === undefined) {
            throw Error("Member ItemMap failed. " + (queriedId && "Could not find Member with id '" + queriedId + "'"));
        }
        return {
            id: item.id,
            address: item.address,
            createdAt: Number(item.createdAt),
            dao: {
                id: item.dao.id,
                entity: new index_1.DAO(context, item.dao.id)
            },
            contract: item.contract,
            reputation: new bn_js_1.default(item.balance)
        };
    };
    Member.calculateId = function (opts) {
        var seed = index_1.concat(index_1.hexStringToUint8Array(opts.contract.toLowerCase()), index_1.hexStringToUint8Array(opts.address.toLowerCase()));
        return ethers_1.utils.keccak256(seed);
    };
    Member.prototype.state = function (apolloQueryOptions) {
        var _this = this;
        if (apolloQueryOptions === void 0) { apolloQueryOptions = {}; }
        var query;
        if (this.id) {
            query = graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["query ReputionHolderStateFromId {\n          # contract: ", "\n          # address: ", "\n          reputationHolder (\n              id: \"", "\"\n          ) {\n            ...ReputationHolderFields\n          }\n        }\n        ", "\n      "], ["query ReputionHolderStateFromId {\n          # contract: ", "\n          # address: ", "\n          reputationHolder (\n              id: \"", "\"\n          ) {\n            ...ReputationHolderFields\n          }\n        }\n        ", "\n      "])), this.coreState && this.coreState.contract, this.coreState && this.coreState.address, this.id, Member.fragments.ReputationHolderFields);
            return this.context.getObservableObject(this.context, query, Member.itemMap, this.id, apolloQueryOptions);
        }
        else {
            var state = this.coreState;
            query = graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject(["query ReputationHolderStateFromDAOAndAddress {\n          reputationHolders (\n            where: {\n              address: \"", "\"\n              dao: \"", "\"\n            }\n          ) {\n            ...ReputationHolderFields\n          }\n        }\n\n        ", "\n        "], ["query ReputationHolderStateFromDAOAndAddress {\n          reputationHolders (\n            where: {\n              address: \"", "\"\n              dao: \"", "\"\n            }\n          ) {\n            ...ReputationHolderFields\n          }\n        }\n\n        ", "\n        "])), state.address, state.dao, Member.fragments.ReputationHolderFields);
        }
        return this.context.getObservableObject(this.context, query, function (arc, items, queriedId) {
            if (items.length) {
                if (!_this.coreState) {
                    throw new Error('Member state is not set');
                }
                return new Member(arc, _this.coreState);
            }
            return Member.itemMap(arc, items[0], queriedId);
        }, this.id, apolloQueryOptions);
    };
    Member.prototype.dao = function () {
        return __awaiter(this, void 0, void 0, function () {
            var state;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.fetchState()];
                    case 1:
                        state = _a.sent();
                        return [2 /*return*/, new index_1.DAO(this.context, state.dao.id)];
                }
            });
        });
    };
    Member.prototype.rewards = function () {
        throw new Error('not implemented');
    };
    Member.prototype.proposals = function (options, apolloQueryOptions) {
        var _this = this;
        if (options === void 0) { options = {}; }
        if (apolloQueryOptions === void 0) { apolloQueryOptions = {}; }
        var observable = rxjs_1.Observable.create(function (observer) { return __awaiter(_this, void 0, void 0, function () {
            var state, sub;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.fetchState()];
                    case 1:
                        state = _a.sent();
                        if (!options.where) {
                            options.where = {};
                        }
                        options.where.proposer = state.address;
                        options.where.dao = state.dao.id;
                        sub = index_1.Proposal.search(this.context, options, apolloQueryOptions).subscribe(observer);
                        return [2 /*return*/, function () { return sub.unsubscribe(); }];
                }
            });
        }); });
        return index_1.toIOperationObservable(observable);
    };
    Member.prototype.stakes = function (options, apolloQueryOptions) {
        var _this = this;
        if (options === void 0) { options = {}; }
        if (apolloQueryOptions === void 0) { apolloQueryOptions = {}; }
        var observable = rxjs_1.Observable.create(function (observer) { return __awaiter(_this, void 0, void 0, function () {
            var state, sub;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.fetchState()];
                    case 1:
                        state = _a.sent();
                        if (!options.where) {
                            options.where = {};
                        }
                        options.where.staker = state.address;
                        options.where.dao = state.dao.id;
                        sub = index_1.Stake.search(this.context, options, apolloQueryOptions).subscribe(observer);
                        return [2 /*return*/, function () { return sub.unsubscribe(); }];
                }
            });
        }); });
        return index_1.toIOperationObservable(observable);
    };
    Member.prototype.votes = function (options, apolloQueryOptions) {
        var _this = this;
        if (options === void 0) { options = {}; }
        if (apolloQueryOptions === void 0) { apolloQueryOptions = {}; }
        var observable = rxjs_1.Observable.create(function (observer) { return __awaiter(_this, void 0, void 0, function () {
            var state, sub;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.fetchState()];
                    case 1:
                        state = _a.sent();
                        if (!options.where) {
                            options.where = {};
                        }
                        options.where.voter = state.address;
                        options.where.dao = state.dao.id;
                        sub = index_1.Vote.search(this.context, options, apolloQueryOptions).subscribe(observer);
                        return [2 /*return*/, function () { return sub.unsubscribe(); }];
                }
            });
        }); });
        return index_1.toIOperationObservable(observable);
    };
    Member.prototype.setState = function (opts) {
        index_1.isAddress(opts.address);
        if (opts.contract) {
            this.id = Member.calculateId({ contract: opts.contract, address: opts.address });
        }
        if (!opts.dao) {
            throw new Error('DAO not defined in options');
        }
        var daoId = opts.dao.id.toLowerCase();
        this.coreState = {
            id: this.id,
            address: opts.address.toLowerCase(),
            contract: opts.contract && opts.contract.toLowerCase(),
            dao: {
                id: daoId,
                entity: new index_1.DAO(this.context, daoId)
            },
            createdAt: opts.createdAt,
            reputation: opts.reputation
        };
        return this.coreState;
    };
    Member.fragments = {
        ReputationHolderFields: graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n      fragment ReputationHolderFields on ReputationHolder {\n        id\n        address\n        contract\n        createdAt\n        dao {\n          id\n        }\n        balance\n      }\n    "], ["\n      fragment ReputationHolderFields on ReputationHolder {\n        id\n        address\n        contract\n        createdAt\n        dao {\n          id\n        }\n        balance\n      }\n    "])))
    };
    return Member;
}(index_1.Entity));
exports.Member = Member;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=member.js.map